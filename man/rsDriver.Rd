% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsDriver.R
\name{rsDriver}
\alias{rsDriver}
\title{Start a Selenium Server and WebDriver remote-controlling a web browser}
\usage{
rsDriver(
  port = 4567L,
  browser = c("chrome", "firefox", "phantomjs", "internet explorer"),
  version = "latest",
  chromever = "latest_compatible",
  geckover = "latest",
  iedrver = NULL,
  phantomver = "2.1.1",
  verbose = TRUE,
  check = TRUE,
  ...
)
}
\arguments{
\item{port}{Port number to run Selenium on. An integer scalar.}

\item{browser}{Which web browser to start. One of
\itemize{
\item \code{"chrome"}
\item \code{"firefox"}
\item \code{"phantomjs"} (deprecated)
\item \code{"internet explorer"}
}}

\item{version}{What version of Selenium Server to run. Defaults to \code{"latest"}
which runs the most recent version. To see other versions currently
sourced, run \code{binman::list_versions("seleniumserver")}.}

\item{chromever}{What version of \href{https://chromedriver.chromium.org/}{ChromeDriver}
to run. Defaults to \code{"latest_compatible"} which runs the most recent
version \emph{compatible} with the (stable) Google Chrome browser version
detected on the system. To use the very latest ChromeDriver version instead
(which might be incompatible), use \code{"latest"}. To see other versions
currently sourced, run \code{binman::list_versions("chromedriver")}. A value of
\code{NULL} excludes adding the Google Chrome browser to Selenium Server.}

\item{geckover}{What version of \href{https://firefox-source-docs.mozilla.org/testing/geckodriver/}{geckodriver}
to run. Defaults to \code{"latest"} which runs the most recent version. To see
other versions currently sourced, run \code{binman::list_versions("geckodriver")}.
A value of \code{NULL} excludes adding the Firefox browser to Selenium Server.}

\item{iedrver}{What version of \href{https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver}{InternetExplorerDriver (\code{IEDriverServer.exe})}
to run. Defaults to \code{"latest"} which runs the most recent version. To see
other version currently sourced, run \code{binman::list_versions("iedriverserver")}.
A value of \code{NULL} excludes adding the Internet Explorer browser to
Selenium Server. \strong{Note} that this functionality is restricted to
Windows only.}

\item{phantomver}{What version of \href{https://phantomjs.org/}{PhantomJS} to run.
Defaults to \code{"2.1.1"} which runs the most recent stable version. To see
other versions currently sourced, run \code{binman::list_versions("phantomjs")}.
A value of \code{NULL} excludes adding the PhantomJS headless browser to
Selenium Server.}

\item{verbose}{If \code{TRUE}, include status messages (if any).}

\item{check}{If \code{TRUE}, check the versions of Selenium available and the
versions of associated drivers (\code{chromever}, \code{geckover}, \code{phantomver},
\code{iedrver}). If new versions are available, they will be downloaded.}

\item{...}{Additional arguments passed to \code{\link{remoteDriver}}.}
}
\value{
A list containing a server and a client. The server is the object
returned by \code{\link[wdman]{selenium}} and the client is an object of class
\code{\link{remoteDriver}}
}
\description{
Start a Selenium Server and WebDriver remote-controlling a web browser
}
\details{
This function is a wrapper around \code{\link[wdman]{selenium}}.
It provides a "shim" for the current issue running Firefox on
Windows. For a more detailed set of functions for running binaries
relating to the Selenium/webdriver project, see the
\code{\link[wdman]{wdman}} package. Both the client and server
are closed using a registered finalizer.
}
\examples{
\dontrun{
# start a chrome browser
rD <- rsDriver()
remDr <- rD[["client"]]
remDr$navigate("http://www.google.com/ncr")
remDr$navigate("http://www.bbc.com")
remDr$close()
# stop the selenium server
rD[["server"]]$stop()

# if user forgets to stop server it will be garbage collected.
rD <- rsDriver()
rm(rD)
gc(rD)
}
}
